{"/home/usuario/dsi/p9/src/pe101/map.ts":{"path":"/home/usuario/dsi/p9/src/pe101/map.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":66}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":42}},"3":{"start":{"line":14,"column":18},"end":{"line":14,"column":20}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":57}},"5":{"start":{"line":15,"column":33},"end":{"line":15,"column":55}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":19}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":16}},"8":{"start":{"line":21,"column":20},"end":{"line":21,"column":28}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":48}},"10":{"start":{"line":23,"column":30},"end":{"line":23,"column":46}},"11":{"start":{"line":24,"column":8},"end":{"line":24,"column":19}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"13":{"start":{"line":29,"column":20},"end":{"line":29,"column":28}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":48}},"15":{"start":{"line":31,"column":30},"end":{"line":31,"column":46}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":19}},"17":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":21}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":13},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":19},"end":{"line":17,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":20},"end":{"line":15,"column":21}},"loc":{"start":{"line":15,"column":33},"end":{"line":15,"column":55}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":30}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":21},"end":{"line":25,"column":5}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":20},"end":{"line":23,"column":21}},"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":46}},"line":23},"7":{"name":"(anonymous_7)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":30}},"line":29},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":21},"end":{"line":33,"column":5}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":20},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":30},"end":{"line":31,"column":46}},"line":31}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":4,"11":1,"12":1,"13":1,"14":4,"15":12,"16":4,"17":1},"f":{"0":2,"1":1,"2":1,"3":3,"4":1,"5":1,"6":4,"7":1,"8":4,"9":12},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/dsi/p9/src/pe101/map.ts","sources":["/home/usuario/dsi/p9/src/pe101/map.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAsB,EAAE;IACpB,gBAAe,CAAC;IAChB,sBAAsB;IACf,GAAG,CAAC,GAAa;QACpB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IACS,GAAG,CAAC,GAAa,EAAG,IAAS;QACnC,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,GAAG,CAAC;IACf,CAAC;CAEJ;AAZD,gBAYC;AAED,MAAa,YAAa,SAAQ,EAAE;IAChC,gBAAe,KAAK,EAAE,CAAA,CAAA,CAAC;IACvB,MAAM,CAAC,GAAW,EAAE,GAAa;QAC7B,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,GAAE,IAAI,CAAC,CAAC;QACvC,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;AAND,oCAMC;AAED,MAAa,YAAa,SAAQ,EAAE;IAChC,gBAAe,KAAK,EAAE,CAAA,CAAA,CAAC;IACvB,MAAM,CAAC,GAAW,EAAE,GAAa;QAC7B,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QACxC,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;AAND,oCAMC","sourcesContent":["/**\n * Clase que implemeta un metodo template\n */\nexport abstract class TM {\n    constructor() {}\n    /**Metodo plantilla */\n    public run(arr: number[]):number[] {\n        return this.map(arr, this.reduce);\n    }\n    protected map(arr: number[],  Func: any): number[] {\n        let ret: number[] = [];\n        arr.forEach((item,i) => ret.push(Func(i, arr)));\n        return ret;\n    }\n    protected abstract reduce(n: number, arr: number[]):number;\n}\n\nexport class AddMapReduce extends TM {\n    constructor() {super()}\n    reduce(acc: number, arr: number[]):number {\n        arr.forEach((item) => acc = acc +item);\n        return acc;\n    }\n}\n\nexport class MulMapReduce extends TM {\n    constructor() {super()}\n    reduce(acc: number, arr: number[]):number {\n        arr.forEach((item) => acc = acc * item);\n        return acc;\n    }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ae0ed5eb5b0867ba1bd3c0b323a6d184bee62d88","contentHash":"ea2dd01d1f2db3ece2b6892a1da3dde09c7c1c7674693f92b9b969a9f884d17b"}}